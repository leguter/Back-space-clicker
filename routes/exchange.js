// routes/exchange.js
const express = require("express");
const db = require("../db");
const authMiddleware = require("../middleware/auth");

const router = express.Router();
router.use(authMiddleware);

// ===============================================================
// üîÑ POST /api/exchange ‚Äî –æ–±–º—ñ–Ω –∫–ª—ñ–∫—ñ–≤ –Ω–∞ –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ –∑—ñ—Ä–∫–∏
// ===============================================================
router.post("/", async (req, res) => {
  try {
    const { telegramId } = req.user;
    const { stars, clicks } = req.body; // –∑ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Å–∫—ñ–ª—å–∫–∏ –∫–ª—ñ–∫—ñ–≤ —ñ —Å–∫—ñ–ª—å–∫–∏ –∑—ñ—Ä–æ–∫

    // 1Ô∏è‚É£ –û—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    const userResult = await db.query(
      `SELECT
         username,
         balance,
         internal_stars,
         (SELECT COUNT(*) FROM referrals WHERE referrer_telegram_id = users.telegram_id) AS referrals
       FROM users
       WHERE telegram_id = $1`,
      [telegramId]
    );

    if (userResult.rows.length === 0) {
      return res.status(404).json({ success: false, message: "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π" });
    }

    const user = userResult.rows[0];

    // 2Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤
    if (user.referrals < 5) {
      return res.status(400).json({
        success: false,
        message: "‚ùó –î–ª—è –æ–±–º—ñ–Ω—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –º–∞—Ç–∏ –º—ñ–Ω—ñ–º—É–º 5 —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤",
      });
    }

    // 3Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–ª—ñ–∫—ñ–≤ (—á–∏ –≤–∏—Å—Ç–∞—á–∞—î)
    if (user.balance < clicks) {
      return res.status(400).json({
        success: false,
        message: "‚ùó –ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–ª—ñ–∫—ñ–≤ –¥–ª—è –æ–±–º—ñ–Ω—É",
      });
    }

    // 4Ô∏è‚É£ –°–ø–∏—Å—É—î–º–æ –∫–ª—ñ–∫–∏ —ñ –¥–æ–¥–∞—î–º–æ –∑—ñ—Ä–∫–∏ –Ω–∞ –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ–π –±–∞–ª–∞–Ω—Å
    await db.query(
      "UPDATE users SET balance = balance - $1, internal_stars = internal_stars + $2 WHERE telegram_id = $3",
      [clicks, stars, telegramId]
    );

    res.json({
      success: true,
      message: `‚úÖ –û–±–º—ñ–Ω —É—Å–ø—ñ—à–Ω–∏–π! –î–æ–¥–∞–Ω–æ ${stars} –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –∑—ñ—Ä–æ–∫.`,
    });
  } catch (err) {
    console.error("Exchange error:", err);
    res.status(500).json({ success: false, message: "–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –æ–±–º—ñ–Ω—ñ" });
  }
});

module.exports = router;
