const express = require("express");
const db = require("../db");
const authMiddleware = require("../middleware/auth");
const axios = require("axios");

const router = express.Router();
router.use(authMiddleware);

// ===============================================================
// üí´ POST /api/withdraw/request ‚Äî —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞—è–≤–∫–∏ –Ω–∞ –≤–∏–≤—ñ–¥ –∑—ñ—Ä–æ–∫
// ===============================================================
router.post("/request", async (req, res) => {
  try {
    const { telegramId } = req.user;
    const { stars, clicks } = req.body;

    // 1Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤
    const refResult = await db.query(
      "SELECT COUNT(*) FROM users WHERE invited_by = $1",
      [telegramId]
    );
    const refCount = parseInt(refResult.rows[0].count);

    if (refCount < 5) {
      return res.json({
        success: false,
        message: "–î–ª—è –≤–∏–≤–æ–¥—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –º–∞—Ç–∏ –º—ñ–Ω—ñ–º—É–º 5 —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤.",
      });
    }

    // 2Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å—É –∫–ª—ñ–∫—ñ–≤
    const userResult = await db.query(
      "SELECT clicks FROM users WHERE telegram_id = $1",
      [telegramId]
    );

    if (userResult.rows.length === 0) {
      return res.json({ success: false, message: "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π." });
    }

    const userClicks = parseInt(userResult.rows[0].clicks);
    if (userClicks < clicks) {
      return res.json({
        success: false,
        message: "–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–ª—ñ–∫—ñ–≤ –¥–ª—è –æ–±–º—ñ–Ω—É.",
      });
    }

    // 3Ô∏è‚É£ –°–ø–∏—Å—É—î–º–æ –∫–ª—ñ–∫–∏ –∑ –±–∞–ª–∞–Ω—Å—É
    await db.query(
      "UPDATE users SET clicks = clicks - $1 WHERE telegram_id = $2",
      [clicks, telegramId]
    );

    // 4Ô∏è‚É£ –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞—è–≤–∫—É –≤ –±–∞–∑—ñ
    const insertResult = await db.query(
      `INSERT INTO withdraw_requests (telegram_id, stars, clicks, status, created_at)
       VALUES ($1, $2, $3, 'pending', NOW())
       RETURNING id`,
      [telegramId, stars, clicks]
    );

    const requestId = insertResult.rows[0].id;

    // 5Ô∏è‚É£ –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º —É Telegram
    const botToken = process.env.BOT_TOKEN;
    const modChatId = process.env.MOD_CHAT_ID; // ‚ö†Ô∏è –¥–æ–¥–∞–π —É .env

    const text = `üí´ <b>–ù–æ–≤–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤–∏–≤—ñ–¥</b>
üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: <code>${telegramId}</code>
‚≠ê –ó—ñ—Ä–∫–∏: <b>${stars}</b>
üëÜ –ö–ª—ñ–∫–∏: <b>${clicks.toLocaleString()}</b>
üÜî ID –∑–∞—è–≤–∫–∏: <code>${requestId}</code>`;

    await axios.post(`https://api.telegram.org/bot${botToken}/sendMessage`, {
      chat_id: modChatId,
      text,
      parse_mode: "HTML",
    });

    res.json({ success: true, message: "–ó–∞—è–≤–∫–∞ —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–∞!" });
  } catch (err) {
    console.error("Withdraw request error:", err);
    res.status(500).json({
      success: false,
      message: "–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –∑–∞—è–≤–∫–∏.",
    });
  }
});

module.exports = router;
